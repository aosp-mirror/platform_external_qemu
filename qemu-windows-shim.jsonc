{
  // This will be at the start of the bazel file.
  "bazel_prefix": "load(\"//build/bazel/rules:windows_resources.bzl\", \"windows_resources\")",
  // These are shims we should apply to the various targets
  "shims": [
    {
      "target": "shared_QAPI_source_files",
      "shims": {
        "cmd": "$(location :qapi-gen) -o $(RULEDIR)/qapi -b $(location qapi/qapi-schema.json)"
      }
    },
    {
      "target": "config-poison_h",
      "shims": {
        // TODO: It would be nice if we could generalize this in the generator
        "cmd": "$(location :make-config-poison) $(SRCS) > $(location config-poison.h)"
      }
    },
    {
      "target": "keymap-gen",
      "shims": {
        "srcs": ["subprojects/keycodemapdb/tools/keymap-gen.py"]
      }
    },
    {
      "target": "qemu-system-riscv64",
      "shims": {
        "+deps": ["qemu-riscv64-softmmu"]
      }
    },
    {
      "target": "qemu-system-aarch64",
      "shims": {
        "+deps": ["qemu-aarch64-softmmu"]
      }
    },
    {
      "target": "qemu-system-x86_64",
      "shims": {
        "+deps": ["qemu-x86_64-softmmu"]
      }
    },
    {
      "target": ".*",
      "shims": {
        "restrict_to": "cc_.*",
        // Remove our compat libs if present
        "-hdrs": ["google.*"],
        "+copts": [
          "-Wno-constant-conversion",
          "-Wno-macro-redefined",
          "-Wno-invalid-noreturn",
          "-Wno-bitfield-constant-conversion",
          "-Wno-int-to-void-pointer-cast",
          "-Wno-unused-command-line-argument",
          "-Wno-undef",
          "-Wno-microsoft-enum-forward-reference",
          "-Wno-microsoft-include",
          "-Wno-deprecated-declarations",
          "-fms-extensions",
          "-march=native"
        ],
        // xs4all!
        "visibility": ["//visibility:public"],
        "-srcs": ["google.*"],
        // Not yet clear how to handle object includes,
        // so let's strip them.
        "-deps": ["common_.*"],
        // We need a compat layer for some windows magic.
        "+deps": ["//external/qemu/google/compat/windows:compat"]
      }
    },
    {
      "target": "qemu-.*-softmmu|qemu-.*-softmmu_common|common",
      // TODO: Figure out why we are not setting
      // this to alwayslink..
      "shims": {
        "restrict_to": "cc_library",
        "alwayslink": 1
      }
    }
,
    {
        "target": "qemuutil",
        "shims": {
          "restrict_to": "cc_library",
          // TODO: Another qemu stub linker order issue. This should likely be
          // addressed in the meson build.
          "-srcs" : ["stubs/blk-exp-close-all.c", "stubs/blk-commit-all.c"]
        }
      }
    // Sample shim that show cases how you can
    // add and remove dependencies to all cc_ like
    // rules.
    // {
    //     "target" : ".*",
    //     "shims" :{
    //    Use restrict_to to limit this shim to rules
    //    of the given type. For example cc_library, cc_binary
    //         "restrict_to" : "cc_.*",
    //    Add the following items to the "deps" set
    //         "+deps": ["to_be_added"],
    //    remove these items from the "deps" set
    //         "-deps": ["block"]
    //    replace the "deps" completely:
    //        "deps": ["a", "b"]
    //     }
    // }
  ],
  // These are the bazel mappings we are going to use for
  // external dependencies. For every pkg config dependency
  // you will need to provide a bazel target
  "external_deps": {
    "glib-2.0": ["@glib//:glib-static", "@glib//:gmodule-static"],
    "zlib": ["@zlib//:zlib"],
    "pixman-1": ["@pixman//:pixman-1", "@pixman//:pixman_simd"],
    "libfdt": ["//external/dtc:libfdt"],
    "libpulse": ["@pulse//:libpulse"],
    "vhost-user": ["//external/qemu/subprojects/libvhost-user:vhost-user"],
    "vhost-user-glib": [
      "//external/qemu/subprojects/libvhost-user:vhost-user-glib"
    ],
    "rutabaga_gfx_ffi": []
  },
  // The actual set of targets you wish to generate bazel targets for.
  // These are the targets that will be exported.
  "export": [
    "qemu-system-x86_64",
    "qemu-system-aarch64",
    "qemu-system-riscv64"
  ],
  "exclude": ["vhost-user", "vhost-user-glib"]
}
