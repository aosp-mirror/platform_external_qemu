syntax = "proto2";

package emulator_automation;

message FileHeader {
    optional uint32 version = 1;
    optional InitialState initial_state = 2;
    optional uint64 duration_ns = 3;
    optional string name = 4;
    optional uint64 record_datetime = 5;
}

message InitialState {
    repeated PhysicalModelEvent physical_model = 2;
}

message RecordedEvent {
    optional uint64 delay = 1;

    oneof stream {
        PhysicalModelEvent physical_model = 50;
        TouchEvent touch = 51;
        SensorOverrideEvent sensor_override = 52;
        LocationOverrideEvent location_override = 53;
    }
}

message ParameterValue {
    repeated float data = 1 [packed = true];
}

message PhysicalModelEvent {
    enum ParameterType {
        POSITION = 0;
        ROTATION = 1;
        MAGNETIC_FIELD = 2;
        TEMPERATURE = 3;
        PROXIMITY = 4;
        LIGHT = 5;
        PRESSURE = 6;
        HUMIDITY = 7;
        VELOCITY = 8;
        AMBIENT_MOTION = 9;
        HINGE_ANGLE0 = 10;
        HINGE_ANGLE1 = 11;
        HINGE_ANGLE2 = 12;
        ROLLABLE0 = 13;
        ROLLABLE1 = 14;
        ROLLABLE2 = 15;
        POSTURE = 16;
        HEART_RATE = 17;
        RGBC_LIGHT = 18;
        WRIST_TILT = 19;
    }

    optional ParameterType type = 1;
    optional ParameterValue current_value = 2;
    optional ParameterValue target_value = 3;
}

message TouchEvent {
    optional float x = 1;
    optional float y = 2;
}

message SensorOverrideEvent {
    // The following list of sensors should be kept in sync with SENSORS_LIST in
    // hw-sensor.h
    enum Sensor {
        ACCELERATION = 0;
        GYROSCOPE = 1;
        MAGNETIC_FIELD = 2;
        ORIENTATION = 3;
        TEMPERATURE = 4;
        PROXIMITY = 5;
        LIGHT = 6;
        PRESSURE = 7;
        HUMIDITY = 8;
        MAGNETIC_FIELD_UNCALIBRATED = 9;
        GYROSCOPE_UNCALIBRATED = 10;
        HINGE_ANGLE0 = 11;
        HINGE_ANGLE1 = 12;
        HINGE_ANGLE2 = 13;
        HEART_RATE = 14;
        RGBC_LIGHT = 15;
        WRIST_TILT = 16;
    }

    optional Sensor sensor = 1;
    optional ParameterValue value = 2;
}

message LocationOverrideEvent {
    optional double latitude = 1;
    optional double longitude = 2;
    optional double meters_elevation = 3;
    optional double speed_knots = 4;
    optional double heading_degrees = 5;
    optional uint32 num_satellites = 6;
    optional uint64 timestamp_in_us = 7;
}
